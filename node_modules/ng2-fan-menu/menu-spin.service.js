"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var menu_options_service_1 = require("./menu-options.service");
var Rx_1 = require("rxjs/Rx");
var SpinService = (function () {
    function SpinService(menuOptions) {
        this.menuOptions = menuOptions;
        this.lastSpinDegree = 0;
        this.wingSpunSource = new Rx_1.Subject();
        this.wingSpun = this.wingSpunSource.asObservable();
    }
    SpinService.prototype.setStartPosition = function (position) {
        this.startPositionDegrees = this.radToDeg(Math.atan2(position.y - this.menuOptions.Center.y, position.x - this.menuOptions.Center.x));
    };
    SpinService.prototype.calculateSpinDegrees = function (position) {
        var degrees = this.radToDeg(Math.atan2(position.y - this.menuOptions.Center.y, position.x - this.menuOptions.Center.x)) - this.startPositionDegrees;
        var deg = this.lastSpinDegree + degrees;
        this.wingSpunSource.next(deg);
    };
    SpinService.prototype.setLastSpinDegrees = function (position) {
        this.lastSpinDegree += this.radToDeg(Math.atan2(position.y - this.menuOptions.Center.y, position.x - this.menuOptions.Center.x)) - this.startPositionDegrees;
    };
    SpinService.prototype.radToDeg = function (angle) {
        return angle * (180 / Math.PI);
    };
    return SpinService;
}());
SpinService.decorators = [
    { type: core_1.Injectable },
];
SpinService.ctorParameters = function () { return [
    { type: menu_options_service_1.MenuOptions, },
]; };
exports.SpinService = SpinService;
//# sourceMappingURL=menu-spin.service.js.map